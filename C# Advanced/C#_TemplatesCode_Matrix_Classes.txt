Console.ReadLine().Split(", ").Select(int.Parse).ToArray()

// fillMatrix char

private static void fillMatrix(char[,] matrix)
        {
            for (int row = 0; row < matrix.GetLength(0); row++)
            {
                char[] input = Console.ReadLine().ToCharArray();

                for (int col = 0; col < matrix.GetLength(1); col++)
                {
                    matrix[row, col] = input[col];
                }
            }
        }

// printMatrix

 private static void printMatrix(char[,] matrix)
        {
            for (int row = 0; row < matrix.GetLength(0); row++)
            {
                for (int col = 0; col < matrix.GetLength(1); col++)
                {
                    Console.Write(matrix[row, col]);
                }
                Console.WriteLine();
            }
        }

string input = Console.ReadLine();
while (input != "End")
{

	input = Console.ReadLine();
}

public static int MoveRow(int row, string movement)
{
	if (movement == "up")
	{
		return row - 1;
	}
	if (movement == "down")
	{
		return row+1;
	}

	return row;
}

public static int MoveCol(int col, string movement)
{
	if (movement == "left")
	{
		return col - 1;
	}
	if (movement == "right")
	{
		return col + 1;
	}

	return col;
}

public static bool IsPositionValid(int row, int col, int rows, int cols)
{
	if (row < 0 || row >= rows)
	{
		return false;
	}
	if (col < 0 || col >= cols)
	{
		return false;
	}

	return true;
}